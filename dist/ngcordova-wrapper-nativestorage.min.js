angular.module("ngCordova.plugins.nativeStorage",[]).factory("$cordovaNativeStorage",["$window","$q","$log",function(e,r,o){var t=!1,n=!1;function c(){return n||((t=e.cordova&&"browser"===e.cordova.platformId||!(e.phonegap||e.cordova))?o.log("NativeStorageWrapper: isInBrowser"):o.log("NativeStorageWrapper: isNotInBrowser"),n=!0),t}return{remove:function(o){var t=r.defer();return c()?function(r,o,t){try{e.localStorage.removeItem(r),o(null)}catch(e){t(e)}}(o,function(e){t.resolve(e)},function(e){t.reject(e)}):NativeStorage.remove(o,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},setItem:function(o,t){var n=r.defer();return c()?function(r,o,t,n){try{var c=JSON.stringify(o);e.localStorage[r]=c,t(o)}catch(e){n(e)}}(o,t,function(e){n.resolve(e)},function(e){n.reject(e)}):NativeStorage.setItem(o,t,function(e){n.resolve(e)},function(e){n.reject(e)}),n.promise},getItem:function(o){var t=r.defer();return c()?function(r,o,t){try{var n=e.localStorage[r];if(void 0==n)throw new Error(r+": undefined");o(JSON.parse(n))}catch(e){t(e)}}(o,function(e){t.resolve(e)},function(e){t.reject(e)}):NativeStorage.getItem(o,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},clear:function(){var e=r.defer();return c()?clearFromLocalStorage(function(r){e.resolve(r)},function(r){e.reject(r)}):NativeStorage.clear(function(r){e.resolve(r)},function(r){e.reject(r)}),e.promise},keys:function(){var o=r.defer();return c()?function(r,o){try{r(Object.keys(e.localStorage)||[])}catch(e){o(e)}}(function(e){o.resolve(e)},function(e){o.reject(e)}):NativeStorage.keys(function(e){o.resolve(e)},function(e){o.reject(e)}),o.promise}}}]);